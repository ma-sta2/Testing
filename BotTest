local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local Owner = nil
local PlayerTarger = nil
local Scene = nil
local SceneLoad = 0
local SceneLoop = false
local SceneStop = false
local Icon = "⚙️"

local GUI = Instance.new("ScreenGui", player.PlayerGui)
GUI.Name = "Bot"

local InputFeld = Instance.new("TextBox", GUI)
InputFeld.Size = UDim2.new(0, 200,0, 50)
InputFeld.Position = UDim2.new(0.5, 0, 0.5, 0)
InputFeld.AnchorPoint = Vector2.new(0.5, 0.5)
InputFeld.TextScaled = true
InputFeld.Text = ""
InputFeld.PlaceholderText = "Enter Name"
InputFeld.BackgroundColor3 = Color3.new(0.776471, 0.776471, 0.776471)

local Config = Instance.new("TextButton", GUI)
Config.Size = UDim2.new(0, 200,0, 25)
Config.Position = UDim2.new(0.5, 0, 0.5, 45)
Config.AnchorPoint = Vector2.new(0.5, 0.5)
Config.TextScaled = true
Config.BackgroundColor3 = Color3.new(0.203922, 1, 0.203922)
Config.Text = "Confign"

local Cancel = Instance.new("TextButton", GUI)
Cancel.Size = UDim2.new(0, 200,0, 25)
Cancel.Position = UDim2.new(0.5, 0, 0.5, 70)
Cancel.AnchorPoint = Vector2.new(0.5, 0.5)
Cancel.TextScaled = true
Cancel.BackgroundColor3 = Color3.new(1, 0.266667, 0.215686)
Cancel.Text = "Cancel"

local UIConter = Instance.new("UICorner")
UIConter.CornerRadius = UDim.new(0, 10)
UIConter:Clone().Parent = InputFeld
UIConter:Clone().Parent = Config
UIConter:Clone().Parent = Cancel

local function splitText(text, splitNumber)
	local firstPart = string.sub(text, 1, splitNumber)
	local secondPart = string.sub(text, splitNumber+1, string.len(text))

	return firstPart, secondPart
end

local function containsText(text, substring)
	local lowerText = string.lower(text)
	local lowerSubstring = string.lower(substring)

	if string.find(lowerText, lowerSubstring, 1, true) then
		return true
	else
		return false
	end
end

-- Функция для отправки сообщения в чат
local function sendChatMessage(message)
	local FullIcon = "["..Icon.."] "
	local args = {
		[1] = FullIcon.." "..message,
		[2] = "All"
	}
	game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
end

local function LoadScene()
	SceneLoad = 0
	for _, child in ipairs(workspace:FindFirstChild("Frames"):GetChildren()) do
		SceneLoad += 1
		local NamePart = "Frame"..SceneLoad
		local Folder = workspace:FindFirstChild("Frames")
		local FramePart = Folder:FindFirstChild(NamePart)
		humanoid:MoveTo(FramePart.Position)
		wait(FramePart.Sec.Value)
	end
	if SceneStop == false then
		if SceneLoop then
			LoadScene()
		else
			sendChatMessage("Done")
		end
	else
		SceneStop = false
	end
end


humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
sendChatMessage("Bot created")

local function onChatted(message)
	if containsText(message, "@") then
		if message == "@test" then
			sendChatMessage("Testing")
		elseif message == "@sit" then
			humanoid.Sit = true
			sendChatMessage("Done")
		elseif message == "@jump" then
			humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			sendChatMessage("Done")
		elseif message == "@stay" then
			humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			sendChatMessage("Done")
		elseif message == "@delete" then
			sendChatMessage("Bot deleted")
			wait(1)
			player:Kick()
		elseif containsText(message, "@follow") then
			local part1, part2 = splitText(message, 8)
			if game.Workspace:FindFirstChild(part2) then
				sendChatMessage("Done")
				PlayerTarger = game.Workspace:FindFirstChild(part2)
			else
				sendChatMessage("Player not found")
			end
		elseif message == "@unfollow" then
			PlayerTarger = nil
			sendChatMessage("Done")
		elseif message == "@dance" then
			humanoid:PlayEmote("Dance")
			sendChatMessage("/e dance")
		elseif  containsText(message, "@icon") then
			local part1, part2 = splitText(message, 6)
			Icon = part2
			sendChatMessage("New icon: "..Icon)
		elseif  containsText(message, "@scene") then
			local part1, part2 = splitText(message, 7)
			if part2 == "new" or part2 == "New" then
				Scene = 0
				if workspace:FindFirstChild("Frames") then
					workspace:FindFirstChild("Frames"):Destroy()
				end
				local Frames = Instance.new("Folder", workspace)
				Frames.Name = "Frames"
				sendChatMessage('New scene created, write "@frame (second)" to create a frame')
			elseif part2 == "start" or part2 == "Start" then
				sendChatMessage("Scene started")
				LoadScene()
			elseif part2 == "loop" or part2 == "Loop" then
				if SceneLoop == false then
					SceneLoop = true
					sendChatMessage("Scene looped: True")
				else
					SceneLoop = false
					sendChatMessage("Scene looped: False")
				end
			elseif part2 == "stop" or part2 == "Stop" then
				SceneStop = true
				LoadScene():Cancel()
				sendChatMessage("Scene stopped")
			end
		elseif containsText(message, "@frame") or containsText(message, "@Frame") then
			local part1, part2 = splitText(message, 7)
			Scene += 1
			local Part = Instance.new("Part", workspace:FindFirstChild("Frames"))
			Part.Anchored = true
			Part.Size = Vector3.new(1,1,1)
			Part.CanCollide = false
			Part.Transparency = 0.5
			Part.Name = "Frame"..Scene
			Part.Position = workspace:FindFirstChild(Owner).HumanoidRootPart.Position
			local Seconds = Instance.new("IntValue", Part)
			Seconds.Name = "Sec"
			Seconds.Value = part2
			sendChatMessage("Frame "..Scene.." created")
		else
			sendChatMessage("Unknown command")
		end
	end
end

Config.MouseButton1Click:Connect(function()
	if game.Workspace:FindFirstChild(InputFeld.Text) then
		Owner = InputFeld.Text
		humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
		sendChatMessage("Owner: "..Owner)
		InputFeld:Destroy()
		Config:Destroy()
		Cancel.AnchorPoint = Vector2.new(0.5, 1)
		game:GetService("TweenService"):Create(Cancel, TweenInfo.new(0.8), {Position = UDim2.new(0.5, 0, 1, 0)}):Play()
		game.Players[Owner].Chatted:Connect(onChatted)
	else
		InputFeld.Text = "Player not found"
		InputFeld.BackgroundColor3 = Color3.new(0.776471, 0, 0)
		game:GetService("TweenService"):Create(InputFeld, TweenInfo.new(0.4), {BackgroundColor3 = Color3.new(0.776471, 0.776471, 0.776471)}):Play()
	end
end)
Cancel.MouseButton1Click:Connect(function()
	humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
	sendChatMessage("Bot deleted")
	GUI:Destroy()
	script:Destroy()
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if not gameProcessed then
		if input.KeyCode == Enum.KeyCode.Z then
			humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			sendChatMessage("Jump")
		end
	end
end)

while wait(1) do
	if PlayerTarger == nil then

	else
		humanoid:MoveTo(PlayerTarger.HumanoidRootPart.Position)
		print("Walk")
	end
end
